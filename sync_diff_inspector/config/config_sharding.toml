# Diff Configuration.

######################### Global config #########################

log-level = "info"

# how many goroutines are created to check data
check-thread-count = 4

# sampling check percent, for example 10 means only check 10% data
sample-percent = 100

# set true if just want compare data by checksum, will skip select data when checksum is not equal.
use-checksum = false

# set true will continue check from the latest checkpoint
use-checkpoint = true

# ignore check table's data
ignore-data-check = false

# ignore check table's struct
ignore-struct-check = false


######################### Databases config #########################
[data-sources.mysql1]
    host = "127.0.0.1"
    port = 3306
    user = "root"
    password = ""

    routes-rules = ["rule1", "rule2"]
    # remove comment if use tidb's snapshot data
    # snapshot = "2016-10-08 16:45:26"

[data-sources.mysql2]
    host = "127.0.0.1"
    port = 3306
    user = "root"
    password = ""

    routes-rules = ["rule1", "rule2"]
    # remove comment if use tidb's snapshot data
    # snapshot = "2016-10-08 16:45:26"

[data-sources.mysql3]
    host = "127.0.0.1"
    port = 3306
    user = "root"
    password = ""

    routes-rules = ["rule1", "rule3"]
    # remove comment if use tidb's snapshot data
    # snapshot = "2016-10-08 16:45:26"

[data-sources.tidb]
    host = "127.0.0.1"
    port = 4000
    user = "root"
    password = ""
    # remove comment if use tidb's snapshot data
    # snapshot = "2016-10-08 16:45:26"

[routes.rule1]
schema-pattern = "test_*"      # 匹配数据源的库名，支持通配符 "*" 和 "?"
table-pattern = "t_*"          # 匹配数据源的表名，支持通配符 "*" 和 "?"
target-schema = "test"         # 目标库名
target-table = "t" # 目标表名

[routes.rule2]
schema-pattern = "test2_*"      # 匹配数据源的库名，支持通配符 "*" 和 "?"
table-pattern = "t2_*"          # 匹配数据源的表名，支持通配符 "*" 和 "?"
target-schema = "test2"         # 目标库名
target-table = "t2" # 目标表名

[routes.rule3]
schema-pattern = "test2_*"      # 匹配数据源的库名，支持通配符 "*" 和 "?"
table-pattern = "t2_*"          # 匹配数据源的表名，支持通配符 "*" 和 "?"
target-schema = "test"         # 目标库名
target-table = "t" # 目标表名


######################### Task config #########################
[task]
    # 1 fix sql: fix-target-TIDB1.sql
    # 2 log: sync-diff.log
    # 3 summary: summary.txt
    # 4 checkpoint: a dir
    output-dir = "./output"

    source-instances = ["mysql1", "mysql2", "mysql3"]

    target-instance = ["tidb"]

    # tables need to check.
	target-check-tables = ["schema*.table*", "!c.*", "test2.t2"]

	# extra table config
	target-configs= ["config1"]

[table-configs.config1]
schema = "schema1"
table = "table"
range = "age > 10 AND age < 20"
index-fields = ""
ignore-columns = ["",""]